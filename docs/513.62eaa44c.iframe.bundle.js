"use strict";(self.webpackChunkideariver_client_web=self.webpackChunkideariver_client_web||[]).push([[513],{"./src/hooks/use-toast.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{dj:()=>useToast});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function cov_2jced3vzgv(){var path="E:\\projects\\hope_v2\\ideariver.client.web\\src\\hooks\\use-toast.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"E:\\projects\\hope_v2\\ideariver.client.web\\src\\hooks\\use-toast.ts",statementMap:{0:{start:{line:4,column:20},end:{line:4,column:21}},1:{start:{line:5,column:27},end:{line:5,column:34}},2:{start:{line:6,column:20},end:{line:11,column:1}},3:{start:{line:12,column:12},end:{line:12,column:13}},4:{start:{line:14,column:4},end:{line:14,column:50}},5:{start:{line:15,column:4},end:{line:15,column:28}},6:{start:{line:17,column:22},end:{line:17,column:31}},7:{start:{line:18,column:25},end:{line:30,column:1}},8:{start:{line:19,column:4},end:{line:21,column:5}},9:{start:{line:20,column:8},end:{line:20,column:15}},10:{start:{line:22,column:20},end:{line:28,column:26}},11:{start:{line:23,column:8},end:{line:23,column:38}},12:{start:{line:24,column:8},end:{line:27,column:11}},13:{start:{line:29,column:4},end:{line:29,column:40}},14:{start:{line:31,column:23},end:{line:81,column:1}},15:{start:{line:32,column:4},end:{line:80,column:5}},16:{start:{line:34,column:12},end:{line:40,column:14}},17:{start:{line:42,column:12},end:{line:48,column:14}},18:{start:{line:44,column:46},end:{line:47,column:25}},19:{start:{line:51,column:36},end:{line:51,column:42}},20:{start:{line:54,column:16},end:{line:60,column:17}},21:{start:{line:55,column:20},end:{line:55,column:46}},22:{start:{line:57,column:20},end:{line:59,column:23}},23:{start:{line:58,column:24},end:{line:58,column:51}},24:{start:{line:61,column:16},end:{line:67,column:18}},25:{start:{line:63,column:50},end:{line:66,column:29}},26:{start:{line:70,column:12},end:{line:75,column:13}},27:{start:{line:71,column:16},end:{line:74,column:18}},28:{start:{line:76,column:12},end:{line:79,column:14}},29:{start:{line:78,column:49},end:{line:78,column:72}},30:{start:{line:82,column:18},end:{line:82,column:20}},31:{start:{line:83,column:18},end:{line:85,column:1}},32:{start:{line:87,column:4},end:{line:87,column:47}},33:{start:{line:88,column:4},end:{line:90,column:7}},34:{start:{line:89,column:8},end:{line:89,column:30}},35:{start:{line:93,column:15},end:{line:93,column:22}},36:{start:{line:94,column:19},end:{line:100,column:10}},37:{start:{line:94,column:28},end:{line:100,column:10}},38:{start:{line:101,column:20},end:{line:104,column:10}},39:{start:{line:101,column:24},end:{line:104,column:10}},40:{start:{line:105,column:4},end:{line:115,column:7}},41:{start:{line:112,column:16},end:{line:112,column:37}},42:{start:{line:112,column:27},end:{line:112,column:37}},43:{start:{line:116,column:4},end:{line:120,column:6}},44:{start:{line:123,column:30},end:{line:123,column:57}},45:{start:{line:124,column:4},end:{line:134,column:7}},46:{start:{line:125,column:8},end:{line:125,column:33}},47:{start:{line:126,column:8},end:{line:131,column:10}},48:{start:{line:127,column:26},end:{line:127,column:53}},49:{start:{line:128,column:12},end:{line:130,column:13}},50:{start:{line:129,column:16},end:{line:129,column:43}},51:{start:{line:135,column:4},end:{line:142,column:6}},52:{start:{line:138,column:28},end:{line:141,column:14}}},fnMap:{0:{name:"genId",decl:{start:{line:13,column:9},end:{line:13,column:14}},loc:{start:{line:13,column:17},end:{line:16,column:1}},line:13},1:{name:"(anonymous_1)",decl:{start:{line:18,column:25},end:{line:18,column:26}},loc:{start:{line:18,column:36},end:{line:30,column:1}},line:18},2:{name:"(anonymous_2)",decl:{start:{line:22,column:31},end:{line:22,column:32}},loc:{start:{line:22,column:35},end:{line:28,column:5}},line:22},3:{name:"(anonymous_3)",decl:{start:{line:31,column:23},end:{line:31,column:24}},loc:{start:{line:31,column:40},end:{line:81,column:1}},line:31},4:{name:"(anonymous_4)",decl:{start:{line:44,column:41},end:{line:44,column:42}},loc:{start:{line:44,column:46},end:{line:47,column:25}},line:44},5:{name:"(anonymous_5)",decl:{start:{line:57,column:41},end:{line:57,column:42}},loc:{start:{line:57,column:50},end:{line:59,column:21}},line:57},6:{name:"(anonymous_6)",decl:{start:{line:63,column:45},end:{line:63,column:46}},loc:{start:{line:63,column:50},end:{line:66,column:29}},line:63},7:{name:"(anonymous_7)",decl:{start:{line:78,column:44},end:{line:78,column:45}},loc:{start:{line:78,column:49},end:{line:78,column:72}},line:78},8:{name:"dispatch",decl:{start:{line:86,column:9},end:{line:86,column:17}},loc:{start:{line:86,column:26},end:{line:91,column:1}},line:86},9:{name:"(anonymous_9)",decl:{start:{line:88,column:22},end:{line:88,column:23}},loc:{start:{line:88,column:34},end:{line:90,column:5}},line:88},10:{name:"toast",decl:{start:{line:92,column:9},end:{line:92,column:14}},loc:{start:{line:92,column:29},end:{line:121,column:1}},line:92},11:{name:"(anonymous_11)",decl:{start:{line:94,column:19},end:{line:94,column:20}},loc:{start:{line:94,column:28},end:{line:100,column:10}},line:94},12:{name:"(anonymous_12)",decl:{start:{line:101,column:20},end:{line:101,column:21}},loc:{start:{line:101,column:24},end:{line:104,column:10}},line:101},13:{name:"(anonymous_13)",decl:{start:{line:111,column:26},end:{line:111,column:27}},loc:{start:{line:111,column:34},end:{line:113,column:13}},line:111},14:{name:"useToast",decl:{start:{line:122,column:9},end:{line:122,column:17}},loc:{start:{line:122,column:20},end:{line:143,column:1}},line:122},15:{name:"(anonymous_15)",decl:{start:{line:124,column:20},end:{line:124,column:21}},loc:{start:{line:124,column:24},end:{line:132,column:5}},line:124},16:{name:"(anonymous_16)",decl:{start:{line:126,column:15},end:{line:126,column:16}},loc:{start:{line:126,column:19},end:{line:131,column:9}},line:126},17:{name:"(anonymous_17)",decl:{start:{line:138,column:17},end:{line:138,column:18}},loc:{start:{line:138,column:28},end:{line:141,column:14}},line:138}},branchMap:{0:{loc:{start:{line:19,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:21,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:19},1:{loc:{start:{line:32,column:4},end:{line:80,column:5}},type:"switch",locations:[{start:{line:33,column:8},end:{line:40,column:14}},{start:{line:41,column:8},end:{line:48,column:14}},{start:{line:49,column:8},end:{line:68,column:13}},{start:{line:69,column:8},end:{line:79,column:14}}],line:32},2:{loc:{start:{line:44,column:46},end:{line:47,column:25}},type:"cond-expr",locations:[{start:{line:44,column:73},end:{line:47,column:21}},{start:{line:47,column:24},end:{line:47,column:25}}],line:44},3:{loc:{start:{line:54,column:16},end:{line:60,column:17}},type:"if",locations:[{start:{line:54,column:16},end:{line:60,column:17}},{start:{line:56,column:23},end:{line:60,column:17}}],line:54},4:{loc:{start:{line:63,column:50},end:{line:66,column:29}},type:"cond-expr",locations:[{start:{line:63,column:94},end:{line:66,column:25}},{start:{line:66,column:28},end:{line:66,column:29}}],line:63},5:{loc:{start:{line:63,column:50},end:{line:63,column:91}},type:"binary-expr",locations:[{start:{line:63,column:50},end:{line:63,column:66}},{start:{line:63,column:70},end:{line:63,column:91}}],line:63},6:{loc:{start:{line:70,column:12},end:{line:75,column:13}},type:"if",locations:[{start:{line:70,column:12},end:{line:75,column:13}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:70},7:{loc:{start:{line:112,column:16},end:{line:112,column:37}},type:"if",locations:[{start:{line:112,column:16},end:{line:112,column:37}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:112},8:{loc:{start:{line:128,column:12},end:{line:130,column:13}},type:"if",locations:[{start:{line:128,column:12},end:{line:130,column:13}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:128}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0},b:{0:[0,0],1:[0,0,0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0]},inputSourceMap:{version:3,sources:["E:\\projects\\hope_v2\\ideariver.client.web\\src\\hooks\\use-toast.ts"],sourcesContent:['"use client"\n\n// Inspired by react-hot-toast library\nimport * as React from "react"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from "@/components/ui/toast"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: "ADD_TOAST",\n  UPDATE_TOAST: "UPDATE_TOAST",\n  DISMISS_TOAST: "DISMISS_TOAST",\n  REMOVE_TOAST: "REMOVE_TOAST",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType["ADD_TOAST"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType["UPDATE_TOAST"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType["DISMISS_TOAST"]\n      toastId?: ToasterToast["id"]\n    }\n  | {\n      type: ActionType["REMOVE_TOAST"]\n      toastId?: ToasterToast["id"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: "REMOVE_TOAST",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case "ADD_TOAST":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case "UPDATE_TOAST":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case "DISMISS_TOAST": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I\'ll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case "REMOVE_TOAST":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, "id">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: "UPDATE_TOAST",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })\n\n  dispatch({\n    type: "ADD_TOAST",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),\n  }\n}\n\nexport { useToast, toast }\n'],names:["React","TOAST_LIMIT","TOAST_REMOVE_DELAY","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","Number","MAX_SAFE_INTEGER","toString","toastTimeouts","Map","addToRemoveQueue","toastId","has","timeout","setTimeout","delete","dispatch","type","set","reducer","state","action","toasts","toast","slice","map","t","id","forEach","undefined","open","filter","listeners","memoryState","listener","props","update","dismiss","onOpenChange","useToast","setState","useState","useEffect","push","index","indexOf","splice"],mappings:"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"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"62bce2b8e012fd07cbe56504a3bd55d4066a415c"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"62bce2b8e012fd07cbe56504a3bd55d4066a415c"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2jced3vzgv=function(){return actualCoverage},actualCoverage}cov_2jced3vzgv();const TOAST_LIMIT=(cov_2jced3vzgv().s[0]++,1),TOAST_REMOVE_DELAY=(cov_2jced3vzgv().s[1]++,1e6);cov_2jced3vzgv().s[2]++;let count=(cov_2jced3vzgv().s[3]++,0);const toastTimeouts=(cov_2jced3vzgv().s[6]++,new Map);cov_2jced3vzgv().s[7]++;const addToRemoveQueue=toastId=>{if(cov_2jced3vzgv().f[1]++,cov_2jced3vzgv().s[8]++,toastTimeouts.has(toastId))return cov_2jced3vzgv().b[0][0]++,void cov_2jced3vzgv().s[9]++;cov_2jced3vzgv().b[0][1]++;const timeout=(cov_2jced3vzgv().s[10]++,setTimeout((()=>{cov_2jced3vzgv().f[2]++,cov_2jced3vzgv().s[11]++,toastTimeouts.delete(toastId),cov_2jced3vzgv().s[12]++,dispatch({type:"REMOVE_TOAST",toastId})}),TOAST_REMOVE_DELAY));cov_2jced3vzgv().s[13]++,toastTimeouts.set(toastId,timeout)};cov_2jced3vzgv().s[14]++;const reducer=(state,action)=>{switch(cov_2jced3vzgv().f[3]++,cov_2jced3vzgv().s[15]++,action.type){case"ADD_TOAST":return cov_2jced3vzgv().b[1][0]++,cov_2jced3vzgv().s[16]++,{...state,toasts:[action.toast,...state.toasts].slice(0,TOAST_LIMIT)};case"UPDATE_TOAST":return cov_2jced3vzgv().b[1][1]++,cov_2jced3vzgv().s[17]++,{...state,toasts:state.toasts.map((t=>(cov_2jced3vzgv().f[4]++,cov_2jced3vzgv().s[18]++,t.id===action.toast.id?(cov_2jced3vzgv().b[2][0]++,{...t,...action.toast}):(cov_2jced3vzgv().b[2][1]++,t))))};case"DISMISS_TOAST":cov_2jced3vzgv().b[1][2]++;{const{toastId}=(cov_2jced3vzgv().s[19]++,action);return cov_2jced3vzgv().s[20]++,toastId?(cov_2jced3vzgv().b[3][0]++,cov_2jced3vzgv().s[21]++,addToRemoveQueue(toastId)):(cov_2jced3vzgv().b[3][1]++,cov_2jced3vzgv().s[22]++,state.toasts.forEach((toast=>{cov_2jced3vzgv().f[5]++,cov_2jced3vzgv().s[23]++,addToRemoveQueue(toast.id)}))),cov_2jced3vzgv().s[24]++,{...state,toasts:state.toasts.map((t=>(cov_2jced3vzgv().f[6]++,cov_2jced3vzgv().s[25]++,cov_2jced3vzgv().b[5][0]++,t.id===toastId||(cov_2jced3vzgv().b[5][1]++,void 0===toastId)?(cov_2jced3vzgv().b[4][0]++,{...t,open:!1}):(cov_2jced3vzgv().b[4][1]++,t))))}}case"REMOVE_TOAST":return cov_2jced3vzgv().b[1][3]++,cov_2jced3vzgv().s[26]++,void 0===action.toastId?(cov_2jced3vzgv().b[6][0]++,cov_2jced3vzgv().s[27]++,{...state,toasts:[]}):(cov_2jced3vzgv().b[6][1]++,cov_2jced3vzgv().s[28]++,{...state,toasts:state.toasts.filter((t=>(cov_2jced3vzgv().f[7]++,cov_2jced3vzgv().s[29]++,t.id!==action.toastId)))})}},listeners=(cov_2jced3vzgv().s[30]++,[]);let memoryState=(cov_2jced3vzgv().s[31]++,{toasts:[]});function dispatch(action){cov_2jced3vzgv().f[8]++,cov_2jced3vzgv().s[32]++,memoryState=reducer(memoryState,action),cov_2jced3vzgv().s[33]++,listeners.forEach((listener=>{cov_2jced3vzgv().f[9]++,cov_2jced3vzgv().s[34]++,listener(memoryState)}))}function toast({...props}){cov_2jced3vzgv().f[10]++;const id=(cov_2jced3vzgv().s[35]++,function genId(){return cov_2jced3vzgv().f[0]++,cov_2jced3vzgv().s[4]++,count=(count+1)%Number.MAX_SAFE_INTEGER,cov_2jced3vzgv().s[5]++,count.toString()}());cov_2jced3vzgv().s[36]++;cov_2jced3vzgv().s[38]++;const dismiss=()=>(cov_2jced3vzgv().f[12]++,cov_2jced3vzgv().s[39]++,dispatch({type:"DISMISS_TOAST",toastId:id}));return cov_2jced3vzgv().s[40]++,dispatch({type:"ADD_TOAST",toast:{...props,id,open:!0,onOpenChange:open=>{cov_2jced3vzgv().f[13]++,cov_2jced3vzgv().s[41]++,open?cov_2jced3vzgv().b[7][1]++:(cov_2jced3vzgv().b[7][0]++,cov_2jced3vzgv().s[42]++,dismiss())}}}),cov_2jced3vzgv().s[43]++,{id,dismiss,update:props=>(cov_2jced3vzgv().f[11]++,cov_2jced3vzgv().s[37]++,dispatch({type:"UPDATE_TOAST",toast:{...props,id}}))}}function useToast(){cov_2jced3vzgv().f[14]++;const[state,setState]=(cov_2jced3vzgv().s[44]++,react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState));return cov_2jced3vzgv().s[45]++,react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>(cov_2jced3vzgv().f[15]++,cov_2jced3vzgv().s[46]++,listeners.push(setState),cov_2jced3vzgv().s[47]++,()=>{cov_2jced3vzgv().f[16]++;const index=(cov_2jced3vzgv().s[48]++,listeners.indexOf(setState));cov_2jced3vzgv().s[49]++,index>-1?(cov_2jced3vzgv().b[8][0]++,cov_2jced3vzgv().s[50]++,listeners.splice(index,1)):cov_2jced3vzgv().b[8][1]++})),[state]),cov_2jced3vzgv().s[51]++,{...state,toast,dismiss:toastId=>(cov_2jced3vzgv().f[17]++,cov_2jced3vzgv().s[52]++,dispatch({type:"DISMISS_TOAST",toastId}))}}}}]);